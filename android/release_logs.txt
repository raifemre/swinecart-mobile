Starting a Gradle Daemon, 1 stopped Daemon could not be reused, use --status for details
WARNING: Configuration 'compile' is obsolete and has been replaced with 'implementation' and 'api'.
It will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html
WARNING: Configuration 'compile' is obsolete and has been replaced with 'implementation' and 'api'.
It will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html
WARNING: Configuration 'testCompile' is obsolete and has been replaced with 'testImplementation' and 'testApi'.
It will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html
WARNING: Configuration 'testApi' is obsolete and has been replaced with 'testImplementation'.
It will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html
WARNING: The specified Android SDK Build Tools version (26.0.3) is ignored, as it is below the minimum supported version (27.0.3) for Android Gradle Plugin 3.1.4.
Android SDK Build Tools 27.0.3 will be used.
To suppress this warning, remove "buildToolsVersion '26.0.3'" from your build.gradle file, as each version of the Android Gradle Plugin now has a default version of the build tools.
:app:preBuild UP-TO-DATE
:app:extractProguardFiles
:react-native-splash-screen:preBuild UP-TO-DATE
:react-native-splash-screen:preReleaseBuild UP-TO-DATE
:react-native-splash-screen:checkReleaseManifest
:react-native-splash-screen:processReleaseManifest
:app:preReleaseBuild
:react-native-splash-screen:compileReleaseAidl
:app:compileReleaseAidl
:react-native-splash-screen:packageReleaseRenderscript NO-SOURCE
:app:compileReleaseRenderscript
:app:checkReleaseManifest
:app:generateReleaseBuildConfig
:app:prepareLintJar UP-TO-DATE
:app:mainApkListPersistenceRelease
:app:bundleReleaseJsAndAssets
warning: the transform cache was reset.
Loading dependency graph, done.
bundle: Writing bundle output to: /home/gio/Desktop/SC/mobile/SwineCart/android/app/build/generated/assets/react/release/index.android.bundle
bundle: Done writing bundle output
bundle: Copying 6 asset files
bundle: Done copying assets
:app:generateReleaseResValues
:app:generateReleaseResources
:react-native-splash-screen:compileReleaseRenderscript
:react-native-splash-screen:generateReleaseResValues
:react-native-splash-screen:generateReleaseResources
:react-native-splash-screen:packageReleaseResources
:app:mergeReleaseResources
:app:createReleaseCompatibleScreenManifests
:app:processReleaseManifest
:app:splitsDiscoveryTaskRelease
:react-native-splash-screen:platformAttrExtractor
:react-native-splash-screen:generateReleaseBuildConfig
:react-native-splash-screen:prepareLintJar UP-TO-DATE
:react-native-splash-screen:javaPreCompileRelease
:react-native-splash-screen:processReleaseJavaRes NO-SOURCE
:react-native-splash-screen:generateReleaseRFile
:app:processReleaseResources
:app:generateReleaseSources
:react-native-splash-screen:generateReleaseSources
:react-native-splash-screen:compileReleaseJavaWithJavac
:react-native-splash-screen:transformClassesAndResourcesWithPrepareIntermediateJarsForRelease
:app:javaPreCompileRelease
:app:compileReleaseJavaWithJavac
:app:compileReleaseNdk NO-SOURCE
:app:compileReleaseSources
:app:lintVitalRelease
:app:mergeReleaseShaders
:app:compileReleaseShaders
:app:generateReleaseAssets
:react-native-splash-screen:mergeReleaseShaders
:react-native-splash-screen:compileReleaseShaders
:react-native-splash-screen:generateReleaseAssets
:react-native-splash-screen:packageReleaseAssets
:app:mergeReleaseAssets
:app:copyReleaseBundledJs
:app:processReleaseJavaRes NO-SOURCE
:app:transformResourcesWithMergeJavaResForRelease
:react-native-splash-screen:mergeReleaseConsumerProguardFiles
:app:transformClassesAndResourcesWithProguardForRelease
Request to incrementing alive workforce from 0. Current workforce (dead or alive) 0
thread-pool size=4
ProGuard, version 5.3.3
Reading input...
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/react-native-0.57.0.aar/b53dd2cc2e3c1d99067b19002296e9e3/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/appcompat-v7-27.1.1.aar/8a020accd2fbff65e4bd7141eb4d5954/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.facebook.infer.annotation/infer-annotation/0.11.2/f514ff4ca022a579d9cf7524846988b646ae4491/infer-annotation-0.11.2.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/modules-2/files-2.1/javax.inject/javax.inject/1/6975da39a7040257bd51d21a231b76c915872d38/javax.inject-1.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/fresco-1.10.0.aar/daaa11aa96d5b22c6955e8e08866290c/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/imagepipeline-okhttp3-1.10.0.aar/9191a08279396087c37d6d47b943ec82/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/drawee-1.10.0.aar/326a8b5614b876e451de227d308c78f5/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/imagepipeline-1.10.0.aar/c3be79f68d8e26a579692e9af59fc6e8/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/imagepipeline-base-1.10.0.aar/0b710736fef840181acfe2a0ac3afe6c/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/soloader-0.5.1.aar/b6c41a3684c77f4147a0846c2c1e3ac3/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.2/25ea2e8b0c338a877313bd4672d3fe056ea78f0d/jsr305-3.0.2.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp3/okhttp-urlconnection/3.10.0/ec614c05825ddd2267677a99f585d3913474b125/okhttp-urlconnection-3.10.0.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp3/okhttp/3.10.0/7ef0f1d95bf4c0b3ba30bbae25e0e562b05cf75e/okhttp-3.10.0.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.squareup.okio/okio/1.14.0/102d7be47241d781ef95f1581d414b0943053130/okio-1.14.0.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/android-jsc-r174650.aar/565a362aed6e74f5035a107c8437d169/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/fbcore-1.10.0.aar/3bc6b77d1b776a599082dd4e055f58e3/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.parse.bolts/bolts-tasks/1.4.0/d85884acf6810a3bbbecb587f239005cbc846dc4/bolts-tasks-1.4.0.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/support-fragment-27.1.1.aar/71cae606d12bf58a30826d4a301476a8/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/animated-vector-drawable-27.1.1.aar/61d24f882b36699d3faa22a8cc36536c/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/support-core-ui-27.1.1.aar/e707d3e4325580b81c302726e2a139c2/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/support-core-utils-27.1.1.aar/b2691a212d5dbeee83f90c5d5e5998c9/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/support-vector-drawable-27.1.1.aar/33b393bb5b78f6b76de62552eef950bb/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/support-compat-27.1.1.aar/c430daa285c3ccf35285c14e8c83a60d/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.android.support/support-annotations/27.1.1/39ded76b5e1ce1c5b2688e1d25cdc20ecee32007/support-annotations-27.1.1.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/livedata-core-1.1.0.aar/bdf398cc96b79ddd5969da8ff7df1292/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/viewmodel-1.1.0.aar/2348f06e22c4fece65958740b2ce2f6c/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/runtime-1.1.0.aar/7f7205620637daed5110960bd59caf10/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/modules-2/files-2.1/android.arch.lifecycle/common/1.1.0/edf3f7bfb84a7521d0599efa3b0113a0ee90f85/common-1.1.0.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/runtime-1.1.0.aar/fae1da0e1f6cf72ef27a283259ac4205/jars/classes.jar] (filtered)
Reading program jar [/home/gio/.gradle/caches/modules-2/files-2.1/android.arch.core/common/1.1.0/8007981f7d7540d89cd18471b8e5dcd2b4f99167/common-1.1.0.jar] (filtered)
Reading program jar [/home/gio/Desktop/SC/mobile/SwineCart/node_modules/react-native-splash-screen/android/build/intermediates/intermediate-jars/release/classes.jar] (filtered)
Reading program directory [/home/gio/Desktop/SC/mobile/SwineCart/android/app/build/intermediates/classes/release] (filtered)
Reading program jar [/home/gio/Desktop/SC/mobile/SwineCart/android/app/build/intermediates/transforms/mergeJavaRes/release/0.jar] (filtered)
Reading library jar [/home/gio/Android/Sdk/platforms/android-27/android.jar]
Reading library jar [/home/gio/Android/Sdk/platforms/android-27/optional/org.apache.http.legacy.jar]
Note: duplicate definition of library class [org.apache.http.params.HttpConnectionParams]
Note: duplicate definition of library class [org.apache.http.params.CoreConnectionPNames]
Note: duplicate definition of library class [org.apache.http.params.HttpParams]
Note: duplicate definition of library class [org.apache.http.conn.scheme.LayeredSocketFactory]
Note: duplicate definition of library class [org.apache.http.conn.scheme.SocketFactory]
Note: duplicate definition of library class [org.apache.http.conn.scheme.HostNameResolver]
Note: duplicate definition of library class [org.apache.http.conn.ConnectTimeoutException]
Note: duplicate definition of library class [android.net.http.SslCertificate]
Note: duplicate definition of library class [android.net.http.SslCertificate$DName]
Note: duplicate definition of library class [android.net.http.SslError]
Note: duplicate definition of library class [android.net.http.HttpResponseCache]
Initializing...
Note: the configuration refers to the unknown class 'com.facebook.react.uimanager.UIProp'
Note: the configuration refers to the unknown class 'sun.misc.Unsafe'
Note: the configuration refers to the unknown class 'com.facebook.react.uimanager.UIProp'
Note: the configuration refers to the unknown class 'sun.misc.Unsafe'
Note: com.facebook.common.webp.WebpSupportStatus: can't find dynamically referenced class com.facebook.webpsupport.WebpBitmapFactoryImpl
Note: com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: can't find dynamically referenced class com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl
Note: com.facebook.imagepipeline.nativecode.WebpTranscoderFactory: can't find dynamically referenced class com.facebook.imagepipeline.nativecode.WebpTranscoderImpl
Note: okhttp3.internal.platform.AndroidPlatform: can't find dynamically referenced class com.android.org.conscrypt.SSLParametersImpl
Note: okhttp3.internal.platform.AndroidPlatform: can't find dynamically referenced class org.apache.harmony.xnet.provider.jsse.SSLParametersImpl
Note: okhttp3.internal.platform.AndroidPlatform$CloseGuard: can't find dynamically referenced class dalvik.system.CloseGuard
Note: okhttp3.internal.platform.ConscryptPlatform: can't find dynamically referenced class org.conscrypt.ConscryptEngineSocket
Note: okhttp3.internal.platform.Platform: can't find dynamically referenced class sun.security.ssl.SSLContextImpl
Note: com.facebook.react.views.textinput.ReactTextInputManager accesses a declared field 'mCursorDrawable' dynamically
Note: the configuration keeps the entry point 'com.facebook.drawee.view.DraweeView { void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy); }', but not the descriptor class 'com.facebook.drawee.interfaces.DraweeHierarchy'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.DraweeView { void setController(com.facebook.drawee.interfaces.DraweeController); }', but not the descriptor class 'com.facebook.drawee.interfaces.DraweeController'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.SimpleDraweeView { void setImageRequest(com.facebook.imagepipeline.request.ImageRequest); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.ReactRootView { void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener); }', but not the descriptor class 'com.facebook.react.ReactRootView$ReactRootViewEventListener'
Note: the configuration keeps the entry point 'com.facebook.react.animated.EventAnimationDriver { EventAnimationDriver(java.util.List,com.facebook.react.animated.ValueAnimatedNode); }', but not the descriptor class 'com.facebook.react.animated.ValueAnimatedNode'
Note: the configuration keeps the entry point 'com.facebook.react.animated.NativeAnimatedModule { void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager); }', but not the descriptor class 'com.facebook.react.animated.NativeAnimatedNodesManager'
Note: the configuration keeps the entry point 'com.facebook.react.devsupport.JSCHeapCapture { void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback); }', but not the descriptor class 'com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback'
Note: the configuration keeps the entry point 'com.facebook.react.devsupport.JSDevSupport { void computeDeepestJSHierarchy(android.view.View,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback); }', but not the descriptor class 'com.facebook.react.devsupport.JSDevSupport$DevSupportCallback'
Note: the configuration keeps the entry point 'com.facebook.react.devsupport.JSDevSupport { void getJSHierarchy(int,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback); }', but not the descriptor class 'com.facebook.react.devsupport.JSDevSupport$DevSupportCallback'
Note: the configuration keeps the entry point 'com.facebook.react.fabric.FabricUIManager { com.facebook.react.uimanager.ReactShadowNode cloneNode(com.facebook.react.uimanager.ReactShadowNode); }', but not the descriptor class 'com.facebook.react.uimanager.ReactShadowNode'
Note: the configuration keeps the entry point 'com.facebook.react.fabric.FabricUIManager { com.facebook.react.uimanager.ReactShadowNode cloneNodeWithNewChildren(com.facebook.react.uimanager.ReactShadowNode); }', but not the descriptor class 'com.facebook.react.uimanager.ReactShadowNode'
Note: the configuration keeps the entry point 'com.facebook.react.fabric.FabricUIManager { com.facebook.react.uimanager.ReactShadowNode cloneNodeWithNewProps(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.bridge.ReadableNativeMap); }', but not the descriptor class 'com.facebook.react.uimanager.ReactShadowNode'
Note: the configuration keeps the entry point 'com.facebook.react.fabric.FabricUIManager { com.facebook.react.uimanager.ReactShadowNode cloneNodeWithNewChildrenAndProps(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.bridge.ReadableNativeMap); }', but not the descriptor class 'com.facebook.react.uimanager.ReactShadowNode'
Note: the configuration keeps the entry point 'com.facebook.react.fabric.FabricUIManager { void appendChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode); }', but not the descriptor class 'com.facebook.react.uimanager.ReactShadowNode'
Note: the configuration keeps the entry point 'com.facebook.react.fabric.FabricUIManager { void appendChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode); }', but not the descriptor class 'com.facebook.react.uimanager.ReactShadowNode'
Note: the configuration keeps the entry point 'com.facebook.react.fabric.FabricUIManager { void appendChildToSet(java.util.List,com.facebook.react.uimanager.ReactShadowNode); }', but not the descriptor class 'com.facebook.react.uimanager.ReactShadowNode'
Note: the configuration keeps the entry point 'com.facebook.react.modules.core.DeviceEventManagerModule { DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler); }', but not the descriptor class 'com.facebook.react.modules.core.DefaultHardwareBackBtnHandler'
Note: the configuration keeps the entry point 'com.facebook.react.modules.core.ExceptionsManagerModule { ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager); }', but not the descriptor class 'com.facebook.react.devsupport.interfaces.DevSupportManager'
Note: the configuration keeps the entry point 'com.facebook.react.modules.core.Timing { Timing(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager); }', but not the descriptor class 'com.facebook.react.devsupport.interfaces.DevSupportManager'
Note: the configuration keeps the entry point 'com.facebook.react.modules.core.Timing { com.facebook.react.modules.core.Timing$IdleCallbackRunnable access$1102(com.facebook.react.modules.core.Timing,com.facebook.react.modules.core.Timing$IdleCallbackRunnable); }', but not the descriptor class 'com.facebook.react.modules.core.Timing$IdleCallbackRunnable'
Note: the configuration keeps the entry point 'com.facebook.react.modules.debug.AnimationsDebugModule { AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings); }', but not the descriptor class 'com.facebook.react.modules.debug.interfaces.DeveloperSettings'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.FrescoModule { FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig); }', but not the descriptor class 'com.facebook.imagepipeline.core.ImagePipelineConfig'
Note: the configuration keeps the entry point 'com.facebook.react.modules.image.ImageLoaderModule { void registerRequest(int,com.facebook.datasource.DataSource); }', but not the descriptor class 'com.facebook.datasource.DataSource'
Note: the configuration keeps the entry point 'com.facebook.react.modules.network.NetworkingModule { void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler); }', but not the descriptor class 'com.facebook.react.modules.network.NetworkingModule$UriHandler'
Note: the configuration keeps the entry point 'com.facebook.react.modules.network.NetworkingModule { void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler); }', but not the descriptor class 'com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler'
Note: the configuration keeps the entry point 'com.facebook.react.modules.network.NetworkingModule { void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler); }', but not the descriptor class 'com.facebook.react.modules.network.NetworkingModule$ResponseHandler'
Note: the configuration keeps the entry point 'com.facebook.react.modules.network.NetworkingModule { void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler); }', but not the descriptor class 'com.facebook.react.modules.network.NetworkingModule$UriHandler'
Note: the configuration keeps the entry point 'com.facebook.react.modules.network.NetworkingModule { void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler); }', but not the descriptor class 'com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler'
Note: the configuration keeps the entry point 'com.facebook.react.modules.network.NetworkingModule { void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler); }', but not the descriptor class 'com.facebook.react.modules.network.NetworkingModule$ResponseHandler'
Note: the configuration keeps the entry point 'com.facebook.react.modules.websocket.WebSocketModule { void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler); }', but not the descriptor class 'com.facebook.react.modules.websocket.WebSocketModule$ContentHandler'
Note: the configuration keeps the entry point 'com.facebook.react.modules.websocket.WebSocketModule { void sendBinary(okio.ByteString,int); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.RootViewManager { android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.RootViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIManagerModule { UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver,int); }', but not the descriptor class 'com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIManagerModule { java.util.Map createConstants(com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver); }', but not the descriptor class 'com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIManagerModule { void registerAnimation(com.facebook.react.animation.Animation); }', but not the descriptor class 'com.facebook.react.animation.Animation'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIManagerModule { void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener); }', but not the descriptor class 'com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIManagerModule { void addUIBlock(com.facebook.react.uimanager.UIBlock); }', but not the descriptor class 'com.facebook.react.uimanager.UIBlock'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIManagerModule { void prependUIBlock(com.facebook.react.uimanager.UIBlock); }', but not the descriptor class 'com.facebook.react.uimanager.UIBlock'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIManagerModule { void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener); }', but not the descriptor class 'com.facebook.react.uimanager.UIManagerModuleListener'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIManagerModule { void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener); }', but not the descriptor class 'com.facebook.react.uimanager.UIManagerModuleListener'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.ViewManager { void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap); }', but not the descriptor class 'com.facebook.react.uimanager.ReactStylesDiffMap'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.ViewManager { android.view.View createView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.touch.JSResponderHandler); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.ViewManager { android.view.View createView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.touch.JSResponderHandler); }', but not the descriptor class 'com.facebook.react.touch.JSResponderHandler'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.ViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.ViewManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.common.SizeMonitoringFrameLayout { void setOnSizeChangedListener(com.facebook.react.uimanager.common.SizeMonitoringFrameLayout$OnSizeChangedListener); }', but not the descriptor class 'com.facebook.react.uimanager.common.SizeMonitoringFrameLayout$OnSizeChangedListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.art.ARTRenderableViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.art.ARTSurfaceViewManager { com.facebook.react.views.art.ARTSurfaceView createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.art.ARTSurfaceViewManager { void updateExtraData(com.facebook.react.views.art.ARTSurfaceView,java.lang.Object); }', but not the descriptor class 'com.facebook.react.views.art.ARTSurfaceView'
Note: the configuration keeps the entry point 'com.facebook.react.views.art.ARTSurfaceViewManager { void setBackgroundColor(com.facebook.react.views.art.ARTSurfaceView,int); }', but not the descriptor class 'com.facebook.react.views.art.ARTSurfaceView'
Note: the configuration keeps the entry point 'com.facebook.react.views.art.ARTSurfaceViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.checkbox.ReactCheckBoxManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.checkbox.ReactCheckBox); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.checkbox.ReactCheckBoxManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.checkbox.ReactCheckBox); }', but not the descriptor class 'com.facebook.react.views.checkbox.ReactCheckBox'
Note: the configuration keeps the entry point 'com.facebook.react.views.checkbox.ReactCheckBoxManager { com.facebook.react.views.checkbox.ReactCheckBox createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.checkbox.ReactCheckBoxManager { void setEnabled(com.facebook.react.views.checkbox.ReactCheckBox,boolean); }', but not the descriptor class 'com.facebook.react.views.checkbox.ReactCheckBox'
Note: the configuration keeps the entry point 'com.facebook.react.views.checkbox.ReactCheckBoxManager { void setOn(com.facebook.react.views.checkbox.ReactCheckBox,boolean); }', but not the descriptor class 'com.facebook.react.views.checkbox.ReactCheckBox'
Note: the configuration keeps the entry point 'com.facebook.react.views.checkbox.ReactCheckBoxManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.checkbox.ReactCheckBoxManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,int); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void getDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object); }', but not the descriptor class 'com.facebook.react.views.image.GlobalImageLoadListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setBlurRadius(com.facebook.react.views.image.ReactImageView,float); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setBorderWidth(com.facebook.react.views.image.ReactImageView,float); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setFadeDuration(com.facebook.react.views.image.ReactImageView,int); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView); }', but not the descriptor class 'com.facebook.react.views.image.ReactImageView'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType); }', but not the descriptor class 'com.facebook.drawee.drawable.ScalingUtils$ScaleType'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod); }', but not the descriptor class 'com.facebook.react.views.image.ImageResizeMethod'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { void setControllerListener(com.facebook.drawee.controller.ControllerListener); }', but not the descriptor class 'com.facebook.drawee.controller.ControllerListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.modal.ReactModalHostManager { com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.modal.ReactModalHostManager { void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView); }', but not the descriptor class 'com.facebook.react.views.modal.ReactModalHostView'
Note: the configuration keeps the entry point 'com.facebook.react.views.modal.ReactModalHostManager { void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.modal.ReactModalHostView'
Note: the configuration keeps the entry point 'com.facebook.react.views.modal.ReactModalHostManager { void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean); }', but not the descriptor class 'com.facebook.react.views.modal.ReactModalHostView'
Note: the configuration keeps the entry point 'com.facebook.react.views.modal.ReactModalHostManager { void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean); }', but not the descriptor class 'com.facebook.react.views.modal.ReactModalHostView'
Note: the configuration keeps the entry point 'com.facebook.react.views.modal.ReactModalHostManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.modal.ReactModalHostManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView); }', but not the descriptor class 'com.facebook.react.views.modal.ReactModalHostView'
Note: the configuration keeps the entry point 'com.facebook.react.views.modal.ReactModalHostManager { void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView); }', but not the descriptor class 'com.facebook.react.views.modal.ReactModalHostView'
Note: the configuration keeps the entry point 'com.facebook.react.views.modal.ReactModalHostManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.modal.ReactModalHostManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.modal.ReactModalHostView { void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener); }', but not the descriptor class 'com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactDialogPickerManager { com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactDialogPickerManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactDropdownPickerManager { com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactDropdownPickerManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactPicker { void setOnSelectListener(com.facebook.react.views.picker.ReactPicker$OnSelectListener); }', but not the descriptor class 'com.facebook.react.views.picker.ReactPicker$OnSelectListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactPickerManager { void setItems(com.facebook.react.views.picker.ReactPicker,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.picker.ReactPicker'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactPickerManager { void setColor(com.facebook.react.views.picker.ReactPicker,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.picker.ReactPicker'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactPickerManager { void setPrompt(com.facebook.react.views.picker.ReactPicker,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.picker.ReactPicker'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactPickerManager { void setEnabled(com.facebook.react.views.picker.ReactPicker,boolean); }', but not the descriptor class 'com.facebook.react.views.picker.ReactPicker'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactPickerManager { void setSelected(com.facebook.react.views.picker.ReactPicker,int); }', but not the descriptor class 'com.facebook.react.views.picker.ReactPicker'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactPickerManager { void onAfterUpdateTransaction(com.facebook.react.views.picker.ReactPicker); }', but not the descriptor class 'com.facebook.react.views.picker.ReactPicker'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactPickerManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.picker.ReactPicker); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactPickerManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.picker.ReactPicker); }', but not the descriptor class 'com.facebook.react.views.picker.ReactPicker'
Note: the configuration keeps the entry point 'com.facebook.react.views.picker.ReactPickerManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setStyle(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager { com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener); }', but not the descriptor class 'com.facebook.react.views.scroll.FpsListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactHorizontalScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactHorizontalScrollViewManager { void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener); }', but not the descriptor class 'com.facebook.react.views.scroll.FpsListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollView'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData'
Note: the configuration keeps the entry point 'com.facebook.react.views.scroll.ReactScrollViewManager { void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData); }', but not the descriptor class 'com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { com.facebook.react.views.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { void setEnabled(com.facebook.react.views.slider.ReactSlider,boolean); }', but not the descriptor class 'com.facebook.react.views.slider.ReactSlider'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { void setValue(com.facebook.react.views.slider.ReactSlider,double); }', but not the descriptor class 'com.facebook.react.views.slider.ReactSlider'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { void setMinimumValue(com.facebook.react.views.slider.ReactSlider,double); }', but not the descriptor class 'com.facebook.react.views.slider.ReactSlider'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { void setMaximumValue(com.facebook.react.views.slider.ReactSlider,double); }', but not the descriptor class 'com.facebook.react.views.slider.ReactSlider'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { void setStep(com.facebook.react.views.slider.ReactSlider,double); }', but not the descriptor class 'com.facebook.react.views.slider.ReactSlider'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { void setThumbTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.slider.ReactSlider'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { void setMinimumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.slider.ReactSlider'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { void setMaximumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.slider.ReactSlider'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider); }', but not the descriptor class 'com.facebook.react.views.slider.ReactSlider'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.slider.ReactSliderManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager { com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager { void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean); }', but not the descriptor class 'com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager { void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager { void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int); }', but not the descriptor class 'com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager { void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int); }', but not the descriptor class 'com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager { void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean); }', but not the descriptor class 'com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager { void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float); }', but not the descriptor class 'com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout); }', but not the descriptor class 'com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactRawTextManager { com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactRawTextManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextAnchorViewManager { void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextAnchorViewManager { void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextAnchorViewManager { void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextAnchorViewManager { void setSelectable(com.facebook.react.views.text.ReactTextView,boolean); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextAnchorViewManager { void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextAnchorViewManager { void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextAnchorViewManager { void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextAnchorViewManager { void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextAnchorViewManager { void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextAnchorViewManager { void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextAnchorViewManager { void setDisabled(com.facebook.react.views.text.ReactTextView,boolean); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextView { void setText(com.facebook.react.views.text.ReactTextUpdate); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextUpdate'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextViewManager { com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextViewManager { void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextViewManager { void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView); }', but not the descriptor class 'com.facebook.react.views.text.ReactTextView'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactTextViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.ReactVirtualTextViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager { FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactEditText { void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher); }', but not the descriptor class 'com.facebook.react.views.textinput.ContentSizeWatcher'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactEditText { void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher); }', but not the descriptor class 'com.facebook.react.views.textinput.ScrollWatcher'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactEditText { void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher); }', but not the descriptor class 'com.facebook.react.views.textinput.SelectionWatcher'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setFontSize(com.facebook.react.views.textinput.ReactEditText,float); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setSelection(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setBlurOnSubmit(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setNumLines(com.facebook.react.views.textinput.ReactEditText,int); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,int); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void checkPasswordType(com.facebook.react.views.textinput.ReactEditText); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText); }', but not the descriptor class 'com.facebook.react.views.textinput.ReactEditText'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { com.facebook.react.views.toolbar.ReactToolbar createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void setLogo(com.facebook.react.views.toolbar.ReactToolbar,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void setNavIcon(com.facebook.react.views.toolbar.ReactToolbar,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void setOverflowIcon(com.facebook.react.views.toolbar.ReactToolbar,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void setRtl(com.facebook.react.views.toolbar.ReactToolbar,boolean); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void setSubtitle(com.facebook.react.views.toolbar.ReactToolbar,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void setSubtitleColor(com.facebook.react.views.toolbar.ReactToolbar,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void setTitle(com.facebook.react.views.toolbar.ReactToolbar,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void setTitleColor(com.facebook.react.views.toolbar.ReactToolbar,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void setContentInsetStart(com.facebook.react.views.toolbar.ReactToolbar,float); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void setContentInsetEnd(com.facebook.react.views.toolbar.ReactToolbar,float); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void setActions(com.facebook.react.views.toolbar.ReactToolbar,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.toolbar.ReactToolbar); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.toolbar.ReactToolbar); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void receiveCommand(com.facebook.react.views.toolbar.ReactToolbar,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.toolbar.ReactToolbar'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.ReactToolbarManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewGroup { void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener); }', but not the descriptor class 'com.facebook.react.touch.OnInterceptTouchEventListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewGroup { void setPointerEvents(com.facebook.react.uimanager.PointerEvents); }', but not the descriptor class 'com.facebook.react.uimanager.PointerEvents'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { int getChildCount(com.facebook.react.views.view.ReactViewGroup); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void removeAllViews(com.facebook.react.views.view.ReactViewGroup); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void startViewTransition(com.facebook.react.views.view.ReactViewGroup,android.view.View); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { void endViewTransition(com.facebook.react.views.view.ReactViewGroup,android.view.View); }', but not the descriptor class 'com.facebook.react.views.view.ReactViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.views.view.ReactViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.viewpager.ReactViewPagerManager { com.facebook.react.views.viewpager.ReactViewPager createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.viewpager.ReactViewPagerManager { void setScrollEnabled(com.facebook.react.views.viewpager.ReactViewPager,boolean); }', but not the descriptor class 'com.facebook.react.views.viewpager.ReactViewPager'
Note: the configuration keeps the entry point 'com.facebook.react.views.viewpager.ReactViewPagerManager { void receiveCommand(com.facebook.react.views.viewpager.ReactViewPager,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.viewpager.ReactViewPager'
Note: the configuration keeps the entry point 'com.facebook.react.views.viewpager.ReactViewPagerManager { void addView(com.facebook.react.views.viewpager.ReactViewPager,android.view.View,int); }', but not the descriptor class 'com.facebook.react.views.viewpager.ReactViewPager'
Note: the configuration keeps the entry point 'com.facebook.react.views.viewpager.ReactViewPagerManager { int getChildCount(com.facebook.react.views.viewpager.ReactViewPager); }', but not the descriptor class 'com.facebook.react.views.viewpager.ReactViewPager'
Note: the configuration keeps the entry point 'com.facebook.react.views.viewpager.ReactViewPagerManager { android.view.View getChildAt(com.facebook.react.views.viewpager.ReactViewPager,int); }', but not the descriptor class 'com.facebook.react.views.viewpager.ReactViewPager'
Note: the configuration keeps the entry point 'com.facebook.react.views.viewpager.ReactViewPagerManager { void removeViewAt(com.facebook.react.views.viewpager.ReactViewPager,int); }', but not the descriptor class 'com.facebook.react.views.viewpager.ReactViewPager'
Note: the configuration keeps the entry point 'com.facebook.react.views.viewpager.ReactViewPagerManager { void setPageMargin(com.facebook.react.views.viewpager.ReactViewPager,float); }', but not the descriptor class 'com.facebook.react.views.viewpager.ReactViewPager'
Note: the configuration keeps the entry point 'com.facebook.react.views.viewpager.ReactViewPagerManager { void setPeekEnabled(com.facebook.react.views.viewpager.ReactViewPager,boolean); }', but not the descriptor class 'com.facebook.react.views.viewpager.ReactViewPager'
Note: the configuration keeps the entry point 'com.facebook.react.views.viewpager.ReactViewPagerManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.webview.ReactWebViewManager { ReactWebViewManager(com.facebook.react.views.webview.WebViewConfig); }', but not the descriptor class 'com.facebook.react.views.webview.WebViewConfig'
Note: the configuration keeps the entry point 'com.facebook.react.views.webview.ReactWebViewManager { com.facebook.react.views.webview.ReactWebViewManager$ReactWebView createReactWebViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.webview.ReactWebViewManager { android.webkit.WebView createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.webview.ReactWebViewManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.webkit.WebView); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.webview.ReactWebViewManager { void dispatchEvent(android.webkit.WebView,com.facebook.react.uimanager.events.Event); }', but not the descriptor class 'com.facebook.react.uimanager.events.Event'
Note: the configuration keeps the entry point 'com.facebook.react.views.webview.ReactWebViewManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'com.facebook.react.views.webview.ReactWebViewManager { android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext); }', but not the descriptor class 'com.facebook.react.uimanager.ThemedReactContext'
Note: the configuration keeps the entry point 'okhttp3.Cache { int readInt(okio.BufferedSource); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.Cache$CacheRequestImpl$1 { Cache$CacheRequestImpl$1(okhttp3.Cache$CacheRequestImpl,okio.Sink,okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor); }', but not the descriptor class 'okio.Sink'
Note: the configuration keeps the entry point 'okhttp3.Cache$CacheResponseBody$1 { Cache$CacheResponseBody$1(okhttp3.Cache$CacheResponseBody,okio.Source,okhttp3.internal.cache.DiskLruCache$Snapshot); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okhttp3.Cache$Entry { Cache$Entry(okio.Source); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okhttp3.Cache$Entry { java.util.List readCertificateList(okio.BufferedSource); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.Cache$Entry { void writeCertList(okio.BufferedSink,java.util.List); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.FormBody { void writeTo(okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.FormBody { long writeOrCountBytes(okio.BufferedSink,boolean); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.HttpUrl { void percentDecode(okio.Buffer,java.lang.String,int,int,boolean); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.HttpUrl { void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.MultipartBody { MultipartBody(okio.ByteString,okhttp3.MediaType,java.util.List); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.MultipartBody { void writeTo(okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.MultipartBody { long writeOrCountBytes(okio.BufferedSink,boolean); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.RequestBody { void writeTo(okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.RequestBody { okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.RequestBody$1 { RequestBody$1(okhttp3.MediaType,okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.RequestBody$1 { void writeTo(okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.RequestBody$2 { void writeTo(okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.RequestBody$3 { void writeTo(okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.ResponseBody { okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.ResponseBody$1 { ResponseBody$1(okhttp3.MediaType,long,okio.BufferedSource); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.ResponseBody$BomAwareReader { ResponseBody$BomAwareReader(okio.BufferedSource,java.nio.charset.Charset); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.WebSocket { boolean send(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.WebSocketListener { void onMessage(okhttp3.WebSocket,okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.Util { boolean discard(okio.Source,int,java.util.concurrent.TimeUnit); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okhttp3.internal.Util { boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okhttp3.internal.Util { java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.cache.CacheInterceptor$1 { CacheInterceptor$1(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.cache.CacheInterceptor$1 { CacheInterceptor$1(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.cache.CacheInterceptor$1 { long read(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.cache.DiskLruCache$2 { DiskLruCache$2(okhttp3.internal.cache.DiskLruCache,okio.Sink); }', but not the descriptor class 'okio.Sink'
Note: the configuration keeps the entry point 'okhttp3.internal.cache.DiskLruCache$Editor$1 { DiskLruCache$Editor$1(okhttp3.internal.cache.DiskLruCache$Editor,okio.Sink); }', but not the descriptor class 'okio.Sink'
Note: the configuration keeps the entry point 'okhttp3.internal.cache.DiskLruCache$Entry { void writeLengths(okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.cache.DiskLruCache$Snapshot { DiskLruCache$Snapshot(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,okio.Source[],long[]); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okhttp3.internal.cache.FaultHidingSink { FaultHidingSink(okio.Sink); }', but not the descriptor class 'okio.Sink'
Note: the configuration keeps the entry point 'okhttp3.internal.cache.FaultHidingSink { void write(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.cache2.FileOperator { void write(long,okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.cache2.FileOperator { void read(long,okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.cache2.Relay { Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okhttp3.internal.cache2.Relay { Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.cache2.Relay { okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okhttp3.internal.cache2.Relay { okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.cache2.Relay { void writeHeader(okio.ByteString,long,long); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.cache2.Relay$RelaySource { long read(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.connection.RealConnection$1 { RealConnection$1(okhttp3.internal.connection.RealConnection,boolean,okio.BufferedSource,okio.BufferedSink,okhttp3.internal.connection.StreamAllocation); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.connection.RealConnection$1 { RealConnection$1(okhttp3.internal.connection.RealConnection,boolean,okio.BufferedSource,okio.BufferedSink,okhttp3.internal.connection.StreamAllocation); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.http.CallServerInterceptor$CountingSink { CallServerInterceptor$CountingSink(okio.Sink); }', but not the descriptor class 'okio.Sink'
Note: the configuration keeps the entry point 'okhttp3.internal.http.CallServerInterceptor$CountingSink { void write(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http.RealResponseBody { RealResponseBody(java.lang.String,long,okio.BufferedSource); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http1.Http1Codec { Http1Codec(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http1.Http1Codec { Http1Codec(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.http1.Http1Codec { void detachTimeout(okio.ForwardingTimeout); }', but not the descriptor class 'okio.ForwardingTimeout'
Note: the configuration keeps the entry point 'okhttp3.internal.http1.Http1Codec$AbstractSource { long read(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http1.Http1Codec$ChunkedSink { void write(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http1.Http1Codec$ChunkedSource { long read(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http1.Http1Codec$FixedLengthSink { void write(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http1.Http1Codec$FixedLengthSource { long read(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http1.Http1Codec$UnknownLengthSource { long read(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Header { Header(okio.ByteString,java.lang.String); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Header { Header(okio.ByteString,okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Header { Header(okio.ByteString,okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Hpack { okio.ByteString checkLowercase(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Hpack$Reader { Hpack$Reader(int,okio.Source); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Hpack$Reader { Hpack$Reader(int,int,okio.Source); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Hpack$Writer { Hpack$Writer(okio.Buffer); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Hpack$Writer { Hpack$Writer(int,boolean,okio.Buffer); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Hpack$Writer { void writeByteString(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Codec$StreamFinishingSource { Http2Codec$StreamFinishingSource(okhttp3.internal.http2.Http2Codec,okio.Source); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Codec$StreamFinishingSource { long read(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Connection { void writeData(int,boolean,okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Connection { void pushDataLater(int,okio.BufferedSource,int,boolean); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Connection$5 { Http2Connection$5(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Connection$Builder { okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Connection$Builder { okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Connection$ReaderRunnable { void data(boolean,int,okio.BufferedSource,int); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Connection$ReaderRunnable { void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Connection$ReaderRunnable { void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Reader { Http2Reader(okio.BufferedSource,boolean); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Reader { int readMedium(okio.BufferedSource); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Reader$ContinuationSource { Http2Reader$ContinuationSource(okio.BufferedSource); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Reader$ContinuationSource { long read(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Reader$Handler { void data(boolean,int,okio.BufferedSource,int); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Reader$Handler { void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Reader$Handler { void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Stream { void receiveData(okio.BufferedSource,int); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Stream$FramingSink { void write(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Stream$FramingSource { long read(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Stream$FramingSource { void receive(okio.BufferedSource,long); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Writer { Http2Writer(okio.BufferedSink,boolean); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Writer { void data(boolean,int,okio.Buffer,int); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Writer { void dataFrame(int,byte,okio.Buffer,int); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Http2Writer { void writeMedium(okio.BufferedSink,int); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Huffman { void encode(okio.ByteString,okio.BufferedSink); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Huffman { void encode(okio.ByteString,okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.Huffman { int encodedLength(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.PushObserver { boolean onData(int,okio.BufferedSource,int,boolean); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.http2.PushObserver$1 { boolean onData(int,okio.BufferedSource,int,boolean); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.huc.BufferedRequestBody { void writeTo(okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.huc.OutputStreamRequestBody { void initOutputStream(okio.BufferedSink,long); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.huc.OutputStreamRequestBody$1 { OutputStreamRequestBody$1(okhttp3.internal.huc.OutputStreamRequestBody,long,okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.huc.StreamedRequestBody { void writeTo(okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.RealWebSocket { void onReadMessage(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.RealWebSocket { void onReadPing(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.RealWebSocket { void onReadPong(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.RealWebSocket { boolean send(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.RealWebSocket { boolean send(okio.ByteString,int); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.RealWebSocket { boolean pong(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.RealWebSocket$Close { RealWebSocket$Close(int,okio.ByteString,long); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.RealWebSocket$Message { RealWebSocket$Message(int,okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.RealWebSocket$Streams { RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.RealWebSocket$Streams { RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.WebSocketProtocol { void toggleMask(okio.Buffer$UnsafeCursor,byte[]); }', but not the descriptor class 'okio.Buffer$UnsafeCursor'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.WebSocketReader { WebSocketReader(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback); }', but not the descriptor class 'okio.BufferedSource'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.WebSocketReader$FrameCallback { void onReadMessage(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.WebSocketReader$FrameCallback { void onReadPing(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.WebSocketReader$FrameCallback { void onReadPong(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.WebSocketWriter { WebSocketWriter(boolean,okio.BufferedSink,java.util.Random); }', but not the descriptor class 'okio.BufferedSink'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.WebSocketWriter { void writePing(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.WebSocketWriter { void writePong(okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.WebSocketWriter { void writeClose(int,okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.WebSocketWriter { void writeControlFrame(int,okio.ByteString); }', but not the descriptor class 'okio.ByteString'
Note: the configuration keeps the entry point 'okhttp3.internal.ws.WebSocketWriter$FrameSink { void write(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okio.AsyncTimeout { void scheduleTimeout(okio.AsyncTimeout,long,boolean); }', but not the descriptor class 'okio.AsyncTimeout'
Note: the configuration keeps the entry point 'okio.AsyncTimeout { boolean cancelScheduledTimeout(okio.AsyncTimeout); }', but not the descriptor class 'okio.AsyncTimeout'
Note: the configuration keeps the entry point 'okio.AsyncTimeout { okio.Sink sink(okio.Sink); }', but not the descriptor class 'okio.Sink'
Note: the configuration keeps the entry point 'okio.AsyncTimeout { okio.Source source(okio.Source); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okio.ForwardingSink { ForwardingSink(okio.Sink); }', but not the descriptor class 'okio.Sink'
Note: the configuration keeps the entry point 'okio.ForwardingSink { void write(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: the configuration keeps the entry point 'okio.ForwardingSource { ForwardingSource(okio.Source); }', but not the descriptor class 'okio.Source'
Note: the configuration keeps the entry point 'okio.ForwardingSource { long read(okio.Buffer,long); }', but not the descriptor class 'okio.Buffer'
Note: there were 4 references to unknown classes.
      You should check your configuration for typos.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#unknownclass)
Note: there were 480 unkept descriptor classes in kept class members.
      You should consider explicitly keeping the mentioned classes
      (using '-keep').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#descriptorclass)
Note: there were 8 unresolved dynamic references to classes or interfaces.
      You should check if you need to specify additional program jars.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclass)
Note: there were 1 accesses to class members by means of introspection.
      You should consider explicitly keeping the mentioned class members
      (using '-keep' or '-keepclassmembers').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclassmember)
Ignoring unused library classes...
  Original number of library classes: 4610
  Final number of library classes:    1385
Printing kept classes, fields, and methods...
Shrinking...
Printing usage to [/home/gio/Desktop/SC/mobile/SwineCart/android/app/build/outputs/mapping/release/usage.txt]...
Removing unused program classes and class elements...
  Original number of program classes: 3472
  Final number of program classes:    2375
Inlining subroutines...
Obfuscating...
Printing mapping to [/home/gio/Desktop/SC/mobile/SwineCart/android/app/build/outputs/mapping/release/mapping.txt]...
Preverifying...
Writing output...
Preparing output jar [/home/gio/Desktop/SC/mobile/SwineCart/android/app/build/intermediates/transforms/proguard/release/0.jar]
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/react-native-0.57.0.aar/b53dd2cc2e3c1d99067b19002296e9e3/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/appcompat-v7-27.1.1.aar/8a020accd2fbff65e4bd7141eb4d5954/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.facebook.infer.annotation/infer-annotation/0.11.2/f514ff4ca022a579d9cf7524846988b646ae4491/infer-annotation-0.11.2.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/modules-2/files-2.1/javax.inject/javax.inject/1/6975da39a7040257bd51d21a231b76c915872d38/javax.inject-1.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/fresco-1.10.0.aar/daaa11aa96d5b22c6955e8e08866290c/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/imagepipeline-okhttp3-1.10.0.aar/9191a08279396087c37d6d47b943ec82/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/drawee-1.10.0.aar/326a8b5614b876e451de227d308c78f5/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/imagepipeline-1.10.0.aar/c3be79f68d8e26a579692e9af59fc6e8/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/imagepipeline-base-1.10.0.aar/0b710736fef840181acfe2a0ac3afe6c/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/soloader-0.5.1.aar/b6c41a3684c77f4147a0846c2c1e3ac3/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.2/25ea2e8b0c338a877313bd4672d3fe056ea78f0d/jsr305-3.0.2.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp3/okhttp-urlconnection/3.10.0/ec614c05825ddd2267677a99f585d3913474b125/okhttp-urlconnection-3.10.0.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp3/okhttp/3.10.0/7ef0f1d95bf4c0b3ba30bbae25e0e562b05cf75e/okhttp-3.10.0.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.squareup.okio/okio/1.14.0/102d7be47241d781ef95f1581d414b0943053130/okio-1.14.0.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/android-jsc-r174650.aar/565a362aed6e74f5035a107c8437d169/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/fbcore-1.10.0.aar/3bc6b77d1b776a599082dd4e055f58e3/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.parse.bolts/bolts-tasks/1.4.0/d85884acf6810a3bbbecb587f239005cbc846dc4/bolts-tasks-1.4.0.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/support-fragment-27.1.1.aar/71cae606d12bf58a30826d4a301476a8/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/animated-vector-drawable-27.1.1.aar/61d24f882b36699d3faa22a8cc36536c/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/support-core-ui-27.1.1.aar/e707d3e4325580b81c302726e2a139c2/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/support-core-utils-27.1.1.aar/b2691a212d5dbeee83f90c5d5e5998c9/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/support-vector-drawable-27.1.1.aar/33b393bb5b78f6b76de62552eef950bb/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/support-compat-27.1.1.aar/c430daa285c3ccf35285c14e8c83a60d/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/modules-2/files-2.1/com.android.support/support-annotations/27.1.1/39ded76b5e1ce1c5b2688e1d25cdc20ecee32007/support-annotations-27.1.1.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/livedata-core-1.1.0.aar/bdf398cc96b79ddd5969da8ff7df1292/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/viewmodel-1.1.0.aar/2348f06e22c4fece65958740b2ce2f6c/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/runtime-1.1.0.aar/7f7205620637daed5110960bd59caf10/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/modules-2/files-2.1/android.arch.lifecycle/common/1.1.0/edf3f7bfb84a7521d0599efa3b0113a0ee90f85/common-1.1.0.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/transforms-1/files-1.1/runtime-1.1.0.aar/fae1da0e1f6cf72ef27a283259ac4205/jars/classes.jar] (filtered)
  Copying resources from program jar [/home/gio/.gradle/caches/modules-2/files-2.1/android.arch.core/common/1.1.0/8007981f7d7540d89cd18471b8e5dcd2b4f99167/common-1.1.0.jar] (filtered)
  Copying resources from program jar [/home/gio/Desktop/SC/mobile/SwineCart/node_modules/react-native-splash-screen/android/build/intermediates/intermediate-jars/release/classes.jar] (filtered)
  Copying resources from program directory [/home/gio/Desktop/SC/mobile/SwineCart/android/app/build/intermediates/classes/release] (filtered)
  Copying resources from program jar [/home/gio/Desktop/SC/mobile/SwineCart/android/app/build/intermediates/transforms/mergeJavaRes/release/0.jar] (filtered)
Printing classes to [/home/gio/Desktop/SC/mobile/SwineCart/android/app/build/outputs/mapping/release/dump.txt]...
:app:transformClassesWithShrinkResForRelease
Removed unused resources: Binary resource data reduced from 550KB to 501KB: Removed 8%
Removed unused resources: Binary resource data reduced from 550KB to 501KB: Removed 8%
Removed unused resources: Binary resource data reduced from 550KB to 501KB: Removed 8%
Removed unused resources: Binary resource data reduced from 550KB to 501KB: Removed 8%
Removed unused resources: Binary resource data reduced from 550KB to 501KB: Removed 8%
:app:transformClassesWithDexBuilderForRelease
:app:transformDexArchiveWithDexMergerForRelease
:app:mergeReleaseJniLibFolders
:react-native-splash-screen:compileReleaseNdk NO-SOURCE
:react-native-splash-screen:mergeReleaseJniLibFolders
:react-native-splash-screen:transformNativeLibsWithMergeJniLibsForRelease
:react-native-splash-screen:transformNativeLibsWithIntermediateJniLibsForRelease
:app:transformNativeLibsWithMergeJniLibsForRelease
:app:validateSigningRelease
:app:packageRelease
:app:assembleRelease
:react-native-splash-screen:extractReleaseAnnotations
:react-native-splash-screen:transformResourcesWithMergeJavaResForRelease
:react-native-splash-screen:transformClassesAndResourcesWithSyncLibJarsForRelease
:react-native-splash-screen:transformNativeLibsWithSyncJniLibsForRelease
:react-native-splash-screen:bundleRelease
:react-native-splash-screen:compileReleaseSources
:react-native-splash-screen:mergeReleaseResources
:react-native-splash-screen:verifyReleaseResources
:react-native-splash-screen:assembleRelease

BUILD SUCCESSFUL in 2m 47s
58 actionable tasks: 56 executed, 2 up-to-date
